from aiogram.dispatcher.filters import BoundFilter
from aiogram import types

from keyboards.inline import ikb_balance
from keyboards.inline.ikb_balance import ikb_support_financially
from loader import dp
from utils.db_api import user_commands as commands


class PositiveBalance(BoundFilter):  # –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π –ª–∏ –±–∞–ª–∞–Ω—Å
    async def check(self, message: types.Message):
        # –≤—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏–∑ –ë–î c –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–º –±–∞–ª–∞–Ω—Å–æ–º
        users = str(await commands.select_all_users_big_balance())
        # id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = str(message.from_user.id)

        if user in users:
            return True
        else:
            await dp.bot.send_message(chat_id=user,
                                      text='–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å, '
                                           '–≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –æ–¥–∏–Ω –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤üëª',
                                      reply_markup=ikb_balance)
            await dp.bot.send_message(chat_id=user,  # –ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –∞—Ä–≥—É–º–µ–Ω—Ç chat_id, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
                                      text='–¢–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –Ω–∞—Åüòé\n'
                                           '–ë–ª–∞–≥–æ–¥–∞—Ä—è –¥–æ–Ω–∞—Ç–∞–º —Ü–µ–Ω—ã –∑–∞–ø—Ä–æ—Å–æ–≤üí∞ –∏ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—èüï∞Ô∏è '
                                           '–±—É–¥—É—Ç —Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –≤—Å–µ –º–µ–Ω—å—à–µ –∏ –º–µ–Ω—å—à–µüéâ',
                                      reply_markup=ikb_support_financially)
            return False
