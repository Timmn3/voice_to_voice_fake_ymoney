import datetime
from aiogram import types
from aiogram.dispatcher.filters import Command
from aiogram.types import CallbackQuery
from keyboards.inline import ikb_balance, ikb_menu
from keyboards.inline.ikb_balance import ikb_paid
from loader import dp
from utils.db_api import user_commands as commands
from utils.db_api.user_commands import change_bill_id, user_bill_id, clear_bill_id, change_balance
from utils.misc.ymoney import payment_yoomoney, check_payment_status, amount_of_payment_yoomoney


@dp.message_handler(Command('balance'))  # –ø–æ –∫–∞–º–∞–Ω–¥–µ /balance –≤—ã–≤–æ–¥–∏—Ç –±–∞–ª–∞–Ω—Å
async def show_balance(message: types.Message):
    balance = await commands.user_balance(int(message.from_user.id))
    await message.answer(f'–í–∞—à –æ—Å—Ç–∞—Ç–æ–∫ –∑–∞–ø—Ä–æ—Å–æ–≤: {int(balance)}', reply_markup=ikb_balance)


# —Ñ—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–∫–∞–∑–∞
async def create_bill_id(user_id, amount):
    dt_now = datetime.datetime.now()  # —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
    bill_id = str(user_id) + str(dt_now)  # –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–∫–∞–∑–∞
    await change_bill_id(user_id, bill_id)  # –∑–∞–ø–∏—Å–∞–ª–∏ –≤ –ë–î –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–∫–∞–∑–∞
    link = await payment_yoomoney(bill_id=bill_id, amount=amount)  # —Å—Å—ã–ª–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É –≤ qiwi
    return link


async def send_payment_message(call: CallbackQuery, amount: int):
    link = await create_bill_id(user_id=call.from_user.id, amount=amount)
    await call.message.edit_reply_markup()  # —É–±—Ä–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    await call.message.answer(f'–°—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞: \n{link}')
    await call.message.answer('–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ –±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç—å –æ–ø–ª–∞—Ç—É:', reply_markup=ikb_paid)


@dp.callback_query_handler(text="1 –∑–∞–ø—Ä–æ—Å")
async def handle_first_request(call: CallbackQuery):
    await send_payment_message(call, amount=29)


@dp.callback_query_handler(text="3 –∑–∞–ø—Ä–æ—Å–∞")
async def handle_second_request(call: CallbackQuery):
    await send_payment_message(call, amount=69)


@dp.callback_query_handler(text="5 –∑–∞–ø—Ä–æ—Å–æ–≤")
async def handle_third_request(call: CallbackQuery):
    await send_payment_message(call, amount=99)


@dp.callback_query_handler(text="10 —Ä—É–±–ª–µ–π")
async def handle_fourth_request(call: CallbackQuery):
    await send_payment_message(call, amount=10)


@dp.callback_query_handler(text="20 —Ä—É–±–ª–µ–π")
async def handle_fifth_request(call: CallbackQuery):
    await send_payment_message(call, amount=20)


# –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–ª–∞—Ç—ã
# –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –ø—Ä–æ–≤–µ—Ä–∏—Ç—å
@dp.callback_query_handler(text="–û–ø–ª–∞—Ç–∏–ª")
async def send_message(call: CallbackQuery):
    user_id = int(call.from_user.id)
    bill_id = await user_bill_id(user_id)  # –ø–æ–ª—É—á–∞–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–∫–∞–∑–∞ –∏–∑ –ë–î
    status = await check_payment_status(bill_id=bill_id)  # –ü—Ä–æ–≤–µ—Ä–∏–º —Å—Ç–∞—Ç—É—Å –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å—á–µ—Ç–∞
    await call.message.edit_reply_markup()  # —É–±—Ä–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    await call.message.delete()  # —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    if status == 'success':
        money = await amount_of_payment_yoomoney(bill_id)  # –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—É–º–º—É –ø–æ –∑–∞–ø—Ä–æ—Å—É qiwi
        amount = await money_to_amount(money)
        await call.message.answer(f'–í–∞—à —Å—Ç–∞—Ç—É—Å: –û–ø–ª–∞—á–µ–Ω–æ')
        await change_balance(user_id, amount)  # –∑–∞–Ω–æ—Å–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –ë–î
        balance = await commands.user_balance(user_id)  # —Å–º–æ—Ç—Ä–∏–º –∫–∞–∫–∞—è –≤ –ë–î —Å—É–º–º–∞
        await call.message.answer(f'–í–∞—à –æ—Å—Ç–∞—Ç–æ–∫ –∑–∞–ø—Ä–æ—Å–æ–≤: {int(balance)}')
        await clear_bill_id(user_id)  # –æ—á–∏—â–∞–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–∫–∞–∑–∞ –≤ –ë–î
        await call.message.answer(f'–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª –¥–ª–∏–Ω–æ–π –¥–æ 30 —Å–µ–∫—É–Ω–¥\n'
                                  f'–§–æ—Ä–º–∞—Ç *.mp3 –∏–ª–∏ *.wav')
    else:
        await call.message.answer(f'–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–ø–ª–∞—Ç–∏—Ç—å —Å–Ω–æ–≤–∞, –ø–æ—Å–ª–µ –Ω–∞–∂–º–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å:',
                                  reply_markup=ikb_paid)
        await call.message.answer(f'–í–∞—à —Å—Ç–∞—Ç—É—Å: {status}')


async def money_to_amount(money):
    money = money / 99 + money
    if 28 < money < 30.0:
        return 1
    elif 66 < money < 70.0:
        return 3
    elif 94 < money < 100.0:
        return 5
    else:
        return 0


# –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –æ—Ç–º–µ–Ω–∏—Ç—å
@dp.callback_query_handler(text="–û—Ç–º–µ–Ω–∏—Ç—å")
async def send_message(call: CallbackQuery):
    await clear_bill_id(int(call.from_user.id))  # –æ—á–∏—â–∞–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–∫–∞–∑–∞ –≤ –ë–î
    await call.message.edit_reply_markup()  # —É–±—Ä–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    await call.message.delete()  # —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    await call.message.answer(f'–û—Ç–º–µ–Ω–µ–Ω–æ! –í—ã–±–µ—Ä–µ—Ç–µ –≥–æ–ª–æ—Å –æ–¥–Ω–æ–≥–æ –∏–∑ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –ª—é–¥–µ–πüòé', reply_markup=ikb_menu)


@dp.message_handler(Command('balance_add'))  # –ø–æ –∫–∞–º–∞–Ω–¥–µ /balance_add –ø–æ–ø–æ–ª–Ω—è–µ–º –±–∞–ª–∞–Ω—Å
async def balance_add(message: types.Message):
    await change_balance(message.chat.id, 1)  # –∑–∞–Ω–æ—Å–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –ë–î
